# -*- coding: utf-8 -*-
require 'open3'
require 'colorize'
require 'fileutils'
$attach = '/Users/bob/Sites/new_ist_data/ist_data/cache/attach/PythonOldExams'
$nbviewer = 'https://nbviewer.org/github/daddygongon/jupyter_num_calc/blob/main/symbolic_math/exams'

module PlainLink
  #check, org, nbviewer, hiki
  SEP = '|'
  def mk_link(name)
    basename = File.basename(name)
    return case File.extname(name)
           when '.ipynb'
             "#{basename}(nbviewer)"
           when '.pdf'
             "#{basename}"
           else
             $stderr.puts name
           end
  end
end

module OrgLink
  SEP = '|'
  def mk_link(name)
    basename = File.basename(name)
    return case File.extname(name)
           when '.ipynb'
             "[[#{basename}][ipynb]]"+
               "([[#{File.join($nbviewer,name)}][nbviewer]])"
           when '.pdf'
             "[[#{basename}][pdf]]"
           else
             $stderr.puts name
           end
  end
end

desc 'mk org table, > tmp.org and open it by emacs'
task :to_org do
  include OrgLink
  mk_table
end


desc 'mk table, mk_link and rsync with dir'
task :to_plain do
  include PlainLink
  mk_table
end

def mk_table
  puts "#{SEP}年度#{SEP}種別#{SEP}問題#{SEP}解答例#{SEP}参考資料"
  data = []
  Dir.glob('./*').reverse.each do |dir|
    next unless Dir.exist?(dir)
    year, kind = File.basename(dir).split('_')

    select = {problem: [], ans: [], ref: []}
    Dir.glob("#{dir}/*").each do |file|
      next if File.extname(file) =~ /\.tex|\.mw|\.bb|\.png|\.org|\.html/
      FileUtils.cp(file, $attach, verbose: false)
      name = File.basename(file)
      case name
      when /problem/
        select[:problem] << mk_link(file)
      when /ans/
        select[:ans] << mk_link(file)
      when /ref/
        select[:ref] << mk_link(file)
      else
        select[:problem] << mk_link(file)
      end
    end

    data << [year, kind, select]
  end

  data.each do |year, kind, select|
    print "#{SEP}20#{year} #{SEP} #{kind} #{SEP}"
    select.each do |key, val|
      print " #{val.join(",")} #{SEP}"
    end
    puts ""
  end  

  exit
end

task :default do
  system 'rake -T'
end

